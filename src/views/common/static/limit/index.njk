<div class="relative w-[70px]" x-data="{ 
    data: { 
        isOpen: false, 
        selected: '', 
        options: [
            { value: 10, label: '10' },
            { value: 20, label: '20' },
            { value: 50, label: '50' },
            { value: 100, label: '100' } 
        ] 
    },
    toggle() { this.data.isOpen = !this.data.isOpen; },
    select(value) { 
        this.data.selected = value; 
        this.data.isOpen = false; 
        filterProducts({ limit: value , page: 1 });
    }
}">
    <div @click="toggle()" class="border px-3 h-[45px] rounded cursor-pointer bg-white flex justify-between items-center">
        <span x-text="data.selected ? data.options.find(o => o.value === data.selected).label : filterData.pagination.limit"></span>
        <svg class="w-4 h-4 transform transition-transform duration-300"
            :class="data.isOpen ? 'rotate-180' : 'rotate-0'" 
            xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
    </div>

    <div x-show="data.isOpen" @click.away="data.isOpen = false" class="absolute mt-1 w-full bg-white border rounded shadow-lg z-50">
        <template x-for="option in data.options" :key="option.value">
            <div 
            @click="select(option.value)"
                 class="px-4 py-2 cursor-pointer hover:bg-gray-100"
                 x-text="option.label">
            </div>
        </template>
    </div>
</div>
